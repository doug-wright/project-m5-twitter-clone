[{"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/index.js":"1","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/App.js":"2","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Profile.js":"3","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/HomeFeed.js":"4","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Bookmarks.js":"5","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/TweetDetails.js":"6","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Notifications.js":"7","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/GlobalStyles.js":"8","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Sidebar.js":"9","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/constants.js":"10","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/CurrentUserContext.js":"11","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/ErrorPage.js":"12","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Spinner.js":"13","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/TweetItem.js":"14","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Media.js":"15","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/PostTweet.js":"16","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/TweetActions.js":"17","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/BigMedia.js":"18"},{"size":509,"mtime":1611693081447,"results":"19","hashOfConfig":"20"},{"size":1977,"mtime":1611698551879,"results":"21","hashOfConfig":"20"},{"size":5428,"mtime":1611697762726,"results":"22","hashOfConfig":"20"},{"size":1124,"mtime":1611694505350,"results":"23","hashOfConfig":"20"},{"size":131,"mtime":1610990183739,"results":"24","hashOfConfig":"20"},{"size":2333,"mtime":1611615511807,"results":"25","hashOfConfig":"20"},{"size":142,"mtime":1610996027486,"results":"26","hashOfConfig":"20"},{"size":1546,"mtime":1611260919855,"results":"27","hashOfConfig":"20"},{"size":1943,"mtime":1611674726153,"results":"28","hashOfConfig":"20"},{"size":246,"mtime":1611610140801,"results":"29","hashOfConfig":"20"},{"size":1042,"mtime":1611695611085,"results":"30","hashOfConfig":"20"},{"size":131,"mtime":1611091291749,"results":"31","hashOfConfig":"20"},{"size":645,"mtime":1611433996259,"results":"32","hashOfConfig":"20"},{"size":3225,"mtime":1611691739062,"results":"33","hashOfConfig":"20"},{"size":524,"mtime":1611614685738,"results":"34","hashOfConfig":"20"},{"size":3438,"mtime":1611434683107,"results":"35","hashOfConfig":"20"},{"size":4125,"mtime":1611692505513,"results":"36","hashOfConfig":"20"},{"size":494,"mtime":1611615319032,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s6vr7x",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/index.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/App.js",["79","80"],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Profile.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/HomeFeed.js",["81"],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Bookmarks.js",[],["82","83"],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/TweetDetails.js",["84"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport Spinner from './Spinner';\nimport BigMedia from './BigMedia';\nimport TweetActions from './TweetActions';\n\nconst TweetDetails = () => {\n  const { tweetId } = useParams();\n  const [tweet, setTweet] = useState({});\n  const [tweetStatus, setTweetStatus] = useState('loading');\n\n  useEffect(() => {\n    fetch('http://localhost:31415/api/tweet/' + tweetId)\n      .then((res) => res.json())\n      .then((json) => {\n        setTweet({...json.tweet});\n        setTweetStatus('idle');\n      })\n      .catch(() => {\n        window.location.href = 'http://localhost:3000/error-page';\n      });\n  }, []);\n\n  return (\n    <>\n      {tweetStatus === 'loading' ?\n        <Spinner scale=\"1.5\" />\n      : \n        <>\n          <Header>\n            <AvatarImg src={tweet.author.avatarSrc} />\n            <Details>\n              <DisplayName>\n                {tweet.author.displayName}\n              </DisplayName>\n              <Handle>@{tweet.author.handle}</Handle>\n            </Details>\n          </Header>\n          <Status>{tweet.status}</Status>\n          {(tweet.media.length > 0) ? <BigMedia media={tweet.media}/> : null}\n          <TimeStamp>{moment(tweet.timestamp).format('H:mm A - MMM D YYYY')}</TimeStamp>\n          <TweetActions\n            id={tweet.id}\n            isLiked={tweet.isLiked}\n            isRetweeted={tweet.isRetweeted}\n            numLikes={tweet.numLikes}\n            numRetweets={tweet.numRetweets}\n          />\n        </>\n      }\n    </>\n  );\n}\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  width: 550px;\n  height: 55px;\n  margin-bottom: 5px;\n`;\n\nconst Details = styled.div`\n  display: inline;\n  width: 500px;\n  /* font-size: 0.8rem; */\n`;\n\nconst AvatarImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n`;\n\nconst DisplayName = styled.span`\n  font-weight: bold;\n`;\n\nconst Handle = styled.p`\n  margin: 0;\n  padding: 0;\n  font-size: 0.8rem;\n`;\n\nconst Status = styled.div`\n  font-size: 1.2rem;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\nconst TimeStamp = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  font-size: 0.9rem;\n`;\n\nexport default TweetDetails;\n","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Notifications.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/GlobalStyles.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Sidebar.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/constants.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/CurrentUserContext.js",["85"],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/ErrorPage.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Spinner.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/TweetItem.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/Media.js",["86"],"import React from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Media = ({ media }) => {\n  return (\n    <>\n      {Object.values(media).map(value => {\n        if (value.type === 'img') {\n          return (<Img key={uuidv4} src={value.url} />);\n        }\n        // Put additional conditions for other\n        // types of media\n      })}\n    </>\n  );\n}\n\nconst Img = styled.img`\n  width: 500px;\n  position: relative;\n  left: 50px;\n  border-radius: 20px;\n`;\n\nexport default Media;\n","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/PostTweet.js",["87","88"],"import React, { useContext, useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { CurrentUserContext } from './CurrentUserContext';\nimport { COLORS } from '../constants';\nimport Spinner from './Spinner';\n\nconst PostTweet = () => {\n  const { currentUser, renderHomeFeed, setRenderHomeFeed } = useContext(CurrentUserContext);\n  const [value, setValue] = useState('');\n  const [postTweetStatus, setPostTweetStatus] = useState('idle');\n  \n  const inputRemaining = 280 - value.length;\n  let btnDisabled = false;\n\n  const handleInput = (event) => {\n    setValue(event.target.value);\n  }\n\n  const handleClick = () => {\n    btnDisabled = true;\n    setPostTweetStatus('loading');\n    fetch('http://localhost:3000/api/tweet', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ status: value })\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setPostTweetStatus('idle');\n        if (renderHomeFeed) {\n          setRenderHomeFeed(false);\n        } else {\n          setRenderHomeFeed(true);\n        }\n        \n        setValue('');\n      })\n      .catch(() => {\n        setPostTweetStatus('idle');\n        // history.push({\n        //   pathname: '/error-page',\n        //   state: 'Component: index, Cannot contact server'\n        // });\n      });\n\n  }\n\n  if (inputRemaining < 0 || inputRemaining === 280) {\n    btnDisabled = true;\n  }\n\n  return (\n    <Wrapper>\n      <AvatarArea>\n        <AvatarImg src={currentUser.avatarSrc} />\n      </AvatarArea>\n      <InputArea>\n        <TextArea\n          onChange={handleInput}\n          placeholder=\"What's happening?\"\n          value={value}\n          rows=\"6\"\n          cols=\"50\"\n          maxLength=\"290\"\n        />\n      </InputArea>\n      <ButtonArea>\n        <Counter inputRemaining={inputRemaining}>{inputRemaining}</Counter>\n        <Button onClick={handleClick} disabled={btnDisabled} state={btnDisabled}>\n          {postTweetStatus === 'loading' ? 'Posting' : 'Meow'}\n        </Button>\n      </ButtonArea>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 50px 500px;\n  grid-template-rows: 140px 60px;\n  width: 550px;\n  height: 200px;\n  border-bottom: 7px solid #eeeeee;\n`;\n\nconst AvatarArea = styled.div`\n  display: flex;\n  justify-content: center;\n  grid-column-start: 1;\n  margin-top: 5px;\n`;\n\nconst InputArea = styled.div`\n  margin-top: 15px;\n  margin-left: 10px;\n  grid-column-start: 2;\n`;\n\nconst ButtonArea = styled.div`\n  display: flex;\n  justify-self: right;\n  align-items: center;\n  margin-right: 10px;\n  grid-column-start: 2;\n  grid-row-start: 2;\n`;\n\nconst AvatarImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n`;\n\nconst Button = styled.button`\n  width: 60px;\n  height: 30px;\n  border-radius: 15px;\n  border: none;\n  color: white;\n  font-weight: bold;\n  background-color: ${props => props.state ? COLORS.btnBackground : COLORS.primary};\n  cursor: pointer;\n`;\n\nconst Counter = styled.span`\n\n  color: ${props => {\n    if (props.inputRemaining < 0) {\n      return 'red';\n    } else if (props.inputRemaining < 56) {\n      return 'orange';\n    } else {\n      return 'darkgray';\n    }\n  }};\n\n  font-size: 0.8rem;\n  margin-right: 20px;\n`;\n\nconst TextArea = styled.textarea`\n  font-size: 1.2rem;\n  font-weight: bold;\n  resize: none;\n  overflow: hidden;\n  border: none;\n  outline: none;\n`;\n\nexport default PostTweet;\n","/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/TweetActions.js",[],"/home/dougwright/Desktop/Bootcamp/project-m5-twitter-clone/client/src/components/BigMedia.js",["89"],"import React from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst BigMedia = ({ media }) => {\n  return (\n    <>\n      {Object.values(media).map(value => {\n        if (value.type === 'img') {\n          return (<Img key={uuidv4} src={value.url} />);\n        }\n        // Put additional conditions for other\n        // types of media\n      })}\n    </>\n  );\n}\n\nconst Img = styled.img`\n  width: 550px;\n  border-radius: 20px;\n`;\n\nexport default BigMedia;\n",{"ruleId":"90","severity":1,"message":"91","line":2,"column":25,"nodeType":"92","messageId":"93","endLine":2,"endColumn":35},{"ruleId":"90","severity":1,"message":"94","line":18,"column":11,"nodeType":"92","messageId":"93","endLine":18,"endColumn":22},{"ruleId":"90","severity":1,"message":"95","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":25,"column":6,"nodeType":"102","endLine":25,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":25,"column":6,"nodeType":"102","endLine":25,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":8,"column":39,"nodeType":"108","messageId":"109","endLine":8,"endColumn":41},{"ruleId":"90","severity":1,"message":"110","line":1,"column":39,"nodeType":"92","messageId":"93","endLine":1,"endColumn":48},{"ruleId":"90","severity":1,"message":"111","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":8,"column":39,"nodeType":"108","messageId":"109","endLine":8,"endColumn":41},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'currentUser' is assigned a value but never used.","'styled' is defined but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tweetId'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["115"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'Spinner' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [tweetId]",{"range":"120","text":"121"},"Update the dependencies array to be: [history]",{"range":"122","text":"123"},[761,763],"[tweetId]",[855,857],"[history]"]